#!/bin/bash

read -p "Insert a target (ex: https://exemplu.ro/path): " BASE_URL
BASE_URL="${BASE_URL%/}"

read -p "Status filtering (ex: 301,404): " FILTER_CODES_INPUT
IFS=',' read -ra FILTER_CODES <<< "$FILTER_CODES_INPUT"

read -p "Extensions (ex: php,ini,txt): " EXT_INPUT
IFS=',' read -ra EXTRA_EXTS <<< "$EXT_INPUT"

WORDLIST=(
  "logo"
  "https"
  "test"
  "info"
  "test-image"
  "file"
  "perf"
  "mock"
  "debug"
  "settings"
  "index"
  "testfile"
)

EXTENDED_WORDLIST=()

if [[ ${#EXTRA_EXTS[@]} -gt 0 ]]; then
  for word in "${WORDLIST[@]}"; do
    for ext in "${EXTRA_EXTS[@]}"; do
      EXTENDED_WORDLIST+=("${word}.${ext}")
    done
  done
else
  EXTENDED_WORDLIST=(
    "logo.svgz"
    "https.php"
    "test.php"
    "info.txt"
    "test-image.svg"
    "test.txt"
    "file.php"
    "perf.php"
    "mock.php"
    "test.json"
    "test.js"
    "data.xml"
    "debug.php"
    "settings.php"
    "index.php"
    "testfile.php.bak"
  )
fi

USER_AGENTS=(
  "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
  "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36"
  "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
  "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0"
)

GREEN_BOLD="\e[1;32m"
YELLOW="\e[1;33m"
RED="\e[1;31m"
MAGENTA="\e[1;35m"
BLUE="\e[1;34m"
RESET="\e[0m"

NOW=$(date +"%Y-%m-%d_%H-%M-%S")
LOGFILE="logfile-scan-$NOW.txt"
TIMESTAMP=$(date +"%H:%M:%S - %Y-%m-%d")
MY_IP=$(curl -s ifconfig.me || echo "Unknown IP")

echo -e "[*] Scanning $BASE_URL"
echo "[*] Saving results to: $LOGFILE"
echo "[*] Source IP: $MY_IP"
echo

echo "[Scan started at $TIMESTAMP]" >> "$LOGFILE"
echo "[Source IP: $MY_IP]" >> "$LOGFILE"
echo >> "$LOGFILE"

for FILE in "${EXTENDED_WORDLIST[@]}"; do
  URL="$BASE_URL/$FILE"
  REQUEST_TIME=$(date +"%H:%M:%S - %Y-%m-%d")
  UA=${USER_AGENTS[$RANDOM % ${#USER_AGENTS[@]}]}

  REDIRECT_CHAIN=()
  CURRENT_URL="$URL"
  MAX_HOPS=5
  HOPS=0
  FINAL_STATUS=""
  FINAL_LENGTH=""

  while true; do
    HEADERS=$(curl -s -A "$UA" -D - -o /dev/null "$CURRENT_URL")
    STATUS=$(echo "$HEADERS" | grep HTTP | tail -n1 | awk '{print $2}')
    LOCATION=$(echo "$HEADERS" | grep -i ^Location: | awk '{print $2}' | tr -d '\r')
    REDIRECT_CHAIN+=("[$STATUS] $CURRENT_URL")

    if [[ "$STATUS" =~ ^30[12]$ && -n "$LOCATION" && $HOPS -lt $MAX_HOPS ]]; then
      CURRENT_URL="$LOCATION"
      ((HOPS++))
    else
      break
    fi
  done

  FINAL_HEADERS=$(curl -s -A "$UA" -D - -o /dev/null "$CURRENT_URL")
  FINAL_STATUS=$(echo "$FINAL_HEADERS" | grep HTTP | tail -n1 | awk '{print $2}')
  FINAL_LENGTH=$(echo "$FINAL_HEADERS" | grep -i "Content-Length" | tail -n1 | awk '{print $2}' | tr -d '\r')

  LAST_ENTRY="${REDIRECT_CHAIN[-1]}"
  if [[ "$LAST_ENTRY" != *"$CURRENT_URL" ]]; then
    REDIRECT_CHAIN+=("[$FINAL_STATUS] $CURRENT_URL")
  fi

  DISPLAY=true
  COLOR_OUTPUT="${BLUE}$FILE${RESET} "
  OUTPUT_LINE="[$MY_IP] [$REQUEST_TIME] $FILE"

  for i in "${!REDIRECT_CHAIN[@]}"; do
    ENTRY="${REDIRECT_CHAIN[$i]}"
    STATUS=$(echo "$ENTRY" | grep -oP "\[\K[0-9]+(?=\])")
    URL_PATH=$(echo "$ENTRY" | cut -d']' -f2- | xargs)

    for FILTER in "${FILTER_CODES[@]}"; do
      [[ "$STATUS" == "$FILTER" ]] && DISPLAY=false
    done

    if [[ "$i" -eq 0 ]]; then
      case "$STATUS" in
        200) COLOR=$GREEN_BOLD ;;
        403) COLOR=$MAGENTA ;;
        404) COLOR=$RED ;;
        30[1-3]) COLOR=$YELLOW ;;
        *) COLOR=$RESET ;;
      esac
      COLOR_OUTPUT+="${COLOR}[$STATUS]${RESET} $URL_PATH"
      OUTPUT_LINE+=" [$STATUS] $URL_PATH"
    else
      COLOR_OUTPUT+=" → $URL_PATH"
      OUTPUT_LINE+=" → $URL_PATH"
    fi
  done

  if [[ "$FINAL_STATUS" == "200" && -n "$FINAL_LENGTH" ]]; then
    COLOR_OUTPUT+=" (${FINAL_LENGTH} bytes)"
    OUTPUT_LINE+=" (${FINAL_LENGTH} bytes)"
  fi

  [[ "$DISPLAY" == true ]] && echo -e "$COLOR_OUTPUT"
  echo "$OUTPUT_LINE" >> "$LOGFILE"
done
